{"version":3,"sources":["redux/actions.js","component/TodoInput.js","component/TodoItem.js","component/TodoList.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","Date","startDate","setStartDate","task","setTask","status","setStatus","dispatch","useDispatch","date","className","required","selected","onChange","type","value","e","target","placeholder","disabled","onClick","todo","id","uuid","payload","TodoItem","editable","setEditable","alert","todoId","TodoList","todos","useSelector","state","map","App","store","createStore","action","newTodos","push","newTodo","filter","update","$set","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07424b39.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport function addTodo(todo) {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: todo,\r\n  };\r\n}\r\n\r\nexport function deleteTodo(todoId) {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: todoId,\r\n  };\r\n}\r\n\r\nexport function updateTodo(todo) {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload: todo,\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { addTodo } from \"../redux/actions\";\r\nimport { v1 as uuid } from \"uuid\";\r\n\r\nfunction TodoInput() {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [task, setTask] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  let date = `${startDate}`;\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col'>\r\n          <DatePicker\r\n            required\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <input\r\n            type='text'\r\n            value={task}\r\n            onChange={(e) => setTask(e.target.value)}\r\n            placeholder=\"Today's task?\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <select onChange={(e) => setStatus(e.target.value)} required>\r\n            <option selected disabled='disabled'>\r\n              Select Status\r\n            </option>\r\n            <option value='Active'>Active</option>\r\n            <option value='Inactive'>Inactive</option>\r\n          </select>\r\n        </div>\r\n        <div className='col'>\r\n          <button\r\n            onClick={() => {\r\n              dispatch(\r\n                addTodo({\r\n                  id: uuid(),\r\n                  date: date,\r\n                  task: task,\r\n                  status: status,\r\n                })\r\n              );\r\n              setStatus(\"\");\r\n              setTask(\"\");\r\n              setStartDate(new Date());\r\n            }}\r\n            className='btn btn-primary'\r\n          >\r\n            Add Task\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, updateTodo } from \"../redux/actions\";\r\n\r\nfunction TodoItem({ todo }) {\r\n  let dispatch = useDispatch();\r\n  const [editable, setEditable] = useState(false);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row mx-2 align-item-center' key={todo.id}>\r\n        <div className='col'>{todo.date}</div>\r\n        <div className='col'>{todo.task}</div>\r\n        <div className='col'>{todo.status}</div>\r\n        <div className='col'>\r\n          <button\r\n            onClick={() => {\r\n              if (!editable) {\r\n                alert(\r\n                  \"code is almost done but because of time exceed i stoped here! but i can explain next moves\"\r\n                );\r\n                // dispatch(updateTodo(todo));\r\n              }\r\n              setEditable(false);\r\n            }}\r\n            className='btn  btn-primary m-2'\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={() => dispatch(deleteTodo(todo.id))}\r\n            className='btn btn-danger m-2'\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction TodoList() {\r\n  const todos = useSelector((state) => state);\r\n  //   console.log(todos);\r\n  return (\r\n    <div className='my-5'>\r\n      {todos.map((todo) => {\r\n        return <TodoItem key={todo.id} todo={todo} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport TodoInput from \"./component/TodoInput\";\nimport TodoList from \"./component/TodoList\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction App() {\n  return (\n    <div className='App m-5'>\n      <TodoInput />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"./actions\";\r\nimport update from \"immutability-helper\";\r\n\r\nconst todos = [];\r\n\r\nexport let reducer = (state = todos, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      let newTodos = [...state];\r\n      newTodos.push(action.payload);\r\n      return newTodos;\r\n    case DELETE_TODO:\r\n      let newTodo = [...state];\r\n      newTodo = newTodo.filter((todo) => todo.id !== action.payload);\r\n      return newTodo;\r\n    case UPDATE_TODO:\r\n      return update(state, {\r\n        [action.payload.id]: {\r\n          todo: { $set: action.payload },\r\n        },\r\n      });\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport let store = createStore(reducer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}